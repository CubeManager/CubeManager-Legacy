export class ServerProperties {
    constructor() {}
    public spawnProtection?: number;
    public maxTickTime?: number;
    public forceGamemode?: boolean;
    public allowNether?: boolean
    public maxChainedNeighborUpdates?: number;
    public enableQuery?: boolean
    public queryPort?: number;
    public playerIdleTimeout?: number;
    public spawnMonsters?: boolean
    public pvp?: boolean
    public hardcore?: boolean
    public enableCommandBlock?: boolean
    public maxPlayers?: number;
    public serverPort?: number;
    public serverIp?: string;
    public spawnNpcs?: boolean
    public allowFlight?: boolean
    public levelName?: string;
    public viewDistance?: number;
    public spawnAnimals?: boolean
    public whiteList?: boolean
    public generateStructures?: boolean
    public onlineMode?: boolean
    public levelSeed?: string;
    public useNativeTransport?: boolean
    public motd?: string;
    public enableRcon?: boolean
    public rconPassword?: string;
    public rconPort?: number;
    public maxWorldSize?: number;
    public resourcePackSha1?: string;
    public enforceWhitelist?: boolean
    public initialEnabledPacks?: string;
    public simulationDistance?: number;
    public rateLimit?: number;
    public hideOnlinePlayers?: boolean
    public preventProxyConnections?: boolean
    public syncChunkWrites?: boolean
    public broadcastRconToOps?: boolean
    public enableStatus?: boolean
    public networkCompressionThreshold?: number;
    public enforceSecureProfile?: boolean
    public enableJmxMonitoring?: boolean
    public requireResourcePack?: boolean
    public entityBroadcastRangePercentage?: number;
    public broadcastConsoleToOps?: boolean
    public resourcePack?: string;
    public resourcePackPrompt?: string;
    public initialDisabledPacks?: string;
    public generatorSettings?: string;
    public difficulty?: string;
    public gamemode?: string;
    public levelType?: string;
    public opPermissionLevel?: number;
}
